name: API Specs ZIP Generator
on:
  # Triggers the workflow on push or pull request events but only for the develop , stage and main branch
  workflow_call:  
  push:
    branches: [ develop,stage,preview,main ]
    paths:
      - 'reference/**' 

jobs:
  ZIP-Generator-Actions:
    runs-on: ubuntu-latest
    timeout-minutes: 15    
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}." 
      - name: Creating new temp sub dir called `tools`
        run: |
         mkdir -m 777 tools
         cd tools
         pwd
         ls -la
      - name: Check out ${{ github.repository }} Repo code at ${{ github.workspace }}
        uses: actions/checkout@v3
        with:
         repository: ${{ github.repository }}
         path: ${{ github.workspace }}
      - name: Check out Fiserv/remote-actions-v1 Repo code at ${{ github.workspace }}/tools
        uses: actions/checkout@v3
        with:
         repository: Fiserv/remote-actions-v1
         ref: develop
         path: ${{ github.workspace }}/tools
      - name: List files in the repository
        run: |
         cd ${{ github.workspace }}
         pwd
         ls -la
         cd ${{ github.workspace }}/tools
         pwd
         ls -la
      - run: echo "üí° The ${{ github.repository }} repository has been cloned on root"
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
         pwd
         ls -la

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Running API Specs ZIP Generator.....
        run: |
          pwd
          cd ${{ github.workspace }}/tools/scripts
          ls -la
          npmv=$(npm --version)
          echo "NPM version installed : " $npmv
          nodev=$(node --version)
          echo "Node version installed : " $nodev
          npm install
          echo " Repo: ${{ github.repository }}"
          echo " Space: ${{ github.workspace }}"
          result=$(npm run download ${{github.workspace }})
          echo "**********TEST RESULTS*********************"
          echo "$result"
          pwd
          ls -la
          rm -rf ${{github.workspace }}/tools
          echo "Temp tools directory deleted ......"
          if [[ $result == *'ZIP GENERATOR FAILED'* ]] ;then
          echo "Validator failed and exiting the Job..."
          exit 1
          elif [[ $result == *'SKIPPED'* ]] ;then
          echo "Validator JOB IS SKIPPED" 
          echo "JOBSTATUS="$result >> $GITHUB_OUTPUT             
          elif [[ $result == *'PASSED'* ]] ;then
          echo "Validator Ran Successfully....üçè"
          fi
      - run: echo "üçè This job's status is ${{ steps.build.outputs.JOBSTATUS }}."
      - name: Show file content
        run: |
          pwd
          ls -la
          cd assets
          ls -la 

      # - name: Pushing postman.zip file remotely into tenants-data repository.
      #   if: ${{steps.build.outputs.JOBSTATUS != 'SKIPPED'}}
      #   uses: dmnemec/copy_file_to_another_repo_action@main
      #   env:
      #     API_TOKEN_GITHUB: ${{ secrets.ZIP_GENERATOR_ACTION }}
      #   with:
      #     source_file: '${{github.workspace}}/assets/${{ github.event.repository.name }}_postman.zip'
      #     destination_repo: 'Fiserv/tenants-data'
      #     destination_folder: 'assets'
      #     destination_branch: '${{ github.ref_name }}'        
      #     user_email: 'abhishek.singh3@fiserv.com'
      #     user_name: 'asingh2023'
      #     commit_message: 'pushing zip file remotely'

      # - name: Pushing specs.zip file remotely into tenants-data repository.
      #   if: ${{steps.build.outputs.JOBSTATUS != 'SKIPPED'}}      
      #   uses: dmnemec/copy_file_to_another_repo_action@main
      #   env:
      #     API_TOKEN_GITHUB: ${{ secrets.ZIP_GENERATOR_ACTION }}
      #   with:
      #     source_file: '${{github.workspace}}/assets/${{ github.event.repository.name }}_spec.zip'
      #     destination_repo: 'Fiserv/tenants-data'
      #     destination_folder: 'assets'
      #     destination_branch: '${{ github.ref_name }}'        
      #     user_email: 'abhishek.singh3@fiserv.com'
      #     user_name: 'asingh2023'
      #     commit_message: 'pushing zip file remotely' 
        