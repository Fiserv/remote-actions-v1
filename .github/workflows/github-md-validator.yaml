name: Markdown Validator
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  # workflow_call:
  # # Triggers the workflow on push or pull request events but only for the dev , stage and main branch
  # push:
  #   branches: [ develop,stage,main ]
  # pull_request:
  #   branches: [ develop,stage,main ]
  #   paths:
  #     - 'docs/**' 

jobs:
  MD-Validator-Action:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}." 
      - name: Creating new temp sub dir called `tools`
        run: |
         mkdir -m 777 tools
         cd tools
         pwd
         ls -la
      - name: Check out ${{ github.repository }} Repo code at ${{ github.workspace }}
        uses: actions/checkout@v3
        with:
         repository: ${{ github.repository }}
         path: ${{ github.workspace }}
      - name: Check out Fiserv/remote-actions Repo code at ${{ github.workspace }}/tools
        uses: actions/checkout@v3
        with:
         repository: Fiserv/remote-actions
         ref: develop
         path: ${{ github.workspace }}/tools
      - name: List files in the repository
        run: |
         cd ${{ github.workspace }}
         pwd
         ls -la
         cd ${{ github.workspace }}/tools
         pwd
         ls -la
      - run: echo "üí° The ${{ github.repository }} repository has been cloned on root"
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
         pwd
         ls -la
      - name: Running MarkDown Validator.....
        run: |
          pwd
          cd ${{ github.workspace }}/tools/scripts
          ls -la
          npmv=$(npm --version)
          echo "NPM version installed : " $npmv
          nodev=$(node --version)
          echo "Node version installed : " $nodev
          npm install
          echo " Repo: ${{ github.repository }}"
          echo " Space: ${{ github.workspace }}"
          result=$(npm run markdown ${{github.workspace }})
          echo "**********TEST RESULTS*********************"
          echo "$result"
          pwd
          ls -la
          rm -rf ${{github.workspace }}/tools
          echo "Temp tools directory deleted ......"
          if [[ $result == *'VALIDATOR FAILED'* ]] ;then
          echo "Validator failed and exiting the Job..."
          exit 1
          elif [[ $result == *'PASSED'* ]] ;then
          echo "Validator Ran Successfully....üçè"
          fi
      - run: echo "üçè This job's status is ${{ job.status }}."
      - name: Show file content
        run: |
          pwd
          ls -la
      # - name: Commited changes from action runner to remote branch
      #   uses: stefanzweifel/git-auto-commit-action@v4